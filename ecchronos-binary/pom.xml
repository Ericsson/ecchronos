<?xml version="1.0" encoding="UTF-8"?>
<!--

    Copyright 2025 Telefonaktiebolaget LM Ericsson

    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
    You may obtain a copy of the License at
        http://www.apache.org/licenses/LICENSE-2.0

    Unless required by applicable law or agreed to in writing, software
    distributed under the License is distributed on an "AS IS" BASIS,
    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
    See the License for the specific language governing permissions and
    limitations under the License.

-->
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <parent>
        <groupId>com.ericsson.bss.cassandra.ecchronos</groupId>
        <artifactId>agent</artifactId>
        <version>1.0.0-SNAPSHOT</version>
    </parent>

    <artifactId>ecchronos-binary-agent</artifactId>
    <packaging>pom</packaging>
    <description>Packaging of ecChronos as a standalone application</description>
    <name>EcChronos Binary</name>
    <properties>
        <maven.compiler.source>17</maven.compiler.source>
        <maven.compiler.target>17</maven.compiler.target>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    </properties>

    <dependencies>
        <!-- Internal -->
        <dependency>
            <groupId>com.ericsson.bss.cassandra.ecchronos</groupId>
            <artifactId>application-agent</artifactId>
            <version>${project.version}</version>
        </dependency>

        <!-- Test -->
        <dependency>
            <groupId>com.ericsson.bss.cassandra.ecchronos</groupId>
            <artifactId>cassandra-test-image-agent</artifactId>
            <version>${project.version}</version>
            <scope>test</scope>
        </dependency>
    </dependencies>

    <build>
        <plugins>
            <plugin>
                <artifactId>maven-assembly-plugin</artifactId>
                <executions>
                    <execution>
                        <id>binary-assembly</id>
                        <goals>
                            <goal>single</goal>
                        </goals>
                        <phase>package</phase>
                        <configuration>
                            <descriptors>
                                <descriptor>src/assembly/assembly.xml</descriptor>
                            </descriptors>
                            <skipAssembly>false</skipAssembly>
                            <appendAssemblyId>false</appendAssemblyId>
                            <tarLongFileMode>posix</tarLongFileMode>
                        </configuration>
                    </execution>
                </executions>
            </plugin>

            <plugin>
                <artifactId>maven-project-info-reports-plugin</artifactId>
                <version>3.4.5</version>
                <executions>
                    <execution>
                        <id>licenses</id>
                        <phase>prepare-package</phase>
                        <goals>
                            <goal>dependencies</goal>
                            <goal>licenses</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>

            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>license-maven-plugin</artifactId>
                <executions>
                    <execution>
                        <id>3pp-generate</id>
                        <phase>prepare-package</phase>
                        <goals>
                            <goal>add-third-party</goal>
                        </goals>
                        <configuration>
                            <acceptPomPackaging>true</acceptPomPackaging>
                            <licenseMerges>
                                <licenseMerge>The Apache Software License, Version 2.0|Apache Software License - Version 2.0|Apache License, Version 2.0|Apache License, 2.0|Apache License 2.0|Apache 2.0|Apache 2</licenseMerge>
                            </licenseMerges>
                            <includedLicenses>
                                <includedLicense>The Apache Software License, Version 2.0</includedLicense>
                                <includedLicense>Apache-2.0</includedLicense>
                                <includedLicense>Apache License, version 2.0</includedLicense>
                                <includedLicense>The Apache License, Version 2.0</includedLicense>
                                <includedLicense>MIT License</includedLicense>
                                <includedLicense>The MIT License (MIT)</includedLicense>
                                <includedLicense>The MIT License</includedLicense>
                                <includedLicense>MIT</includedLicense>
                                <includedLicense>MIT-0</includedLicense>
                                <includedLicense>Eclipse Public License - v 1.0</includedLicense>
                                <includedLicense>EPL 2.0</includedLicense>
                                <includedLicense>EDL 1.0</includedLicense>
                                <includedLicense>Eclipse Distribution License - v 1.0</includedLicense>
                                <includedLicense>GPL2 w/ CPE</includedLicense>
                                <includedLicense>Public Domain, per Creative Commons CC0</includedLicense>
                                <includedLicense>CC0</includedLicense>
                                <includedLicense>BSD-2-Clause</includedLicense>
                                <includedLicense>BSD-3-Clause</includedLicense>
                            </includedLicenses>
                            <failOnBlacklist>true</failOnBlacklist>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <artifactId>maven-resources-plugin</artifactId>
                <version>3.1.0</version>
                <executions>
                    <execution>
                        <id>copy-config-resources</id>
                        <phase>prepare-package</phase>
                        <goals>
                            <goal>copy-resources</goal>
                        </goals>
                        <configuration>
                            <outputDirectory>${project.build.directory}</outputDirectory>
                            <resources>
                                <resource>
                                    <directory>${project.basedir}/../application/src/main/resources</directory>
                                    <filtering>false</filtering>
                                    <includes>
                                        <include>ecc.yml</include>
                                        <include>security.yml</include>
                                        <include>application.yml</include>
                                        <include>schedule.yml</include>
                                    </includes>
                                    <excludes>
                                        <exclude>**/__pycache__/**</exclude>
                                        <exclude>**/*.pyc</exclude>
                                    </excludes>
                                </resource>
                            </resources>
                        </configuration>
                    </execution>
                    <execution>
                        <id>copy-test-resources</id>
                        <phase>validate</phase>
                        <goals>
                            <goal>copy-resources</goal>
                        </goals>
                        <configuration>
                            <outputDirectory>${project.build.directory}/test</outputDirectory>
                            <resources>
                                <resource>
                                    <directory>src/test/bin</directory>
                                    <filtering>true</filtering>
                                    <excludes>
                                        <exclude>**/__pycache__/**</exclude>
                                        <exclude>**/*.pyc</exclude>
                                    </excludes>
                                </resource>
                                <resource>
                                    <directory>src/test/behave</directory>
                                    <filtering>false</filtering>
                                    <excludes>
                                        <exclude>**/__pycache__/**</exclude>
                                        <exclude>**/*.pyc</exclude>
                                    </excludes>
                                </resource>
                            </resources>
                        </configuration>
                    </execution>
                </executions>
            </plugin>


        </plugins>
    </build>

    <profiles>
        <profile>
            <activation>
                <property>
                    <name>precommit.tests</name>
                </property>
            </activation>
            <id>python-integration-tests</id>
            <build>
                <plugins>
                    <!-- Integration tests -->
                    <plugin>
                        <artifactId>maven-dependency-plugin</artifactId>
                        <executions>
                            <execution>
                                <id>unpack-ecc-binary</id>
                                <phase>pre-integration-test</phase>
                                <goals>
                                    <goal>unpack</goal>
                                </goals>
                                <configuration>
                                    <artifactItems>
                                        <artifactItem>
                                            <groupId>com.ericsson.bss.cassandra.ecchronos</groupId>
                                            <artifactId>ecchronos-binary-agent</artifactId>
                                            <version>${project.version}</version>
                                            <type>tar.gz</type>
                                            <outputDirectory>${project.build.directory}/test</outputDirectory>
                                        </artifactItem>
                                    </artifactItems>
                                </configuration>
                            </execution>
                            <execution>
                                <id>unpack-certificate-generation</id>
                                <phase>prepare-package</phase>
                                <goals>
                                    <goal>unpack</goal>
                                </goals>
                                <configuration>
                                    <artifactItems>
                                        <artifactItem>
                                            <groupId>com.ericsson.bss.cassandra.ecchronos</groupId>
                                            <artifactId>cassandra-test-image-agent</artifactId>
                                            <version>${project.version}</version>
                                            <outputDirectory>${project.build.directory}/certificates</outputDirectory>
                                        </artifactItem>
                                    </artifactItems>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>

                    <plugin>
                        <groupId>org.codehaus.mojo</groupId>
                        <artifactId>exec-maven-plugin</artifactId>
                        <executions>
                            <execution>
                                <id>generate-certificates</id>
                                <phase>package</phase>
                                <goals>
                                    <goal>exec</goal>
                                </goals>
                                <configuration>
                                    <executable>bash</executable>
                                    <arguments>
                                        <argument>generate_certificates.sh</argument>
                                    </arguments>
                                    <workingDirectory>${project.build.directory}/certificates</workingDirectory>
                                </configuration>
                            </execution>
                            <execution>
                                <id>install-python-dependencies</id>
                                <phase>pre-integration-test</phase>
                                <goals>
                                    <goal>exec</goal>
                                </goals>
                                <configuration>
                                    <executable>bash</executable>
                                    <arguments>
                                        <argument>install_dependencies.sh</argument>
                                    </arguments>
                                    <workingDirectory>${project.build.directory}/test</workingDirectory>
                                    <environmentVariables>
                                        <PROJECT_VERSION>${project.version}</PROJECT_VERSION>
                                        <PROJECT_BUILD_DIRECTORY>${project.build.directory}</PROJECT_BUILD_DIRECTORY>
                                        <BASE_DIR>${project.basedir}</BASE_DIR>
                                        <CASSANDRA_VERSION>${it.cassandra.version}</CASSANDRA_VERSION>
                                        <JOLOKIA_ENABLED>${it.jolokia.enabled}</JOLOKIA_ENABLED>
                                    </environmentVariables>
                                </configuration>
                            </execution>
                            <execution>
                                <id>python-integration-tests</id>
                                <phase>integration-test</phase>
                                <goals>
                                    <goal>exec</goal>
                                </goals>
                                <configuration>
                                    <executable>python</executable>
                                    <arguments>
                                    <argument>-m</argument>
                                        <argument>pytest</argument>
                                        <argument>test_ecchronos.py</argument>
                                        <argument>-s</argument>
                                        <argument>-v</argument>
                                        <argument>--tb=short</argument>
                                    </arguments>
                                    <workingDirectory>${project.build.directory}/test</workingDirectory>
                                    <environmentVariables>
                                        <LOCAL>false</LOCAL>
                                        <PROJECT_VERSION>${project.version}</PROJECT_VERSION>
                                        <PROJECT_BUILD_DIRECTORY>${project.build.directory}</PROJECT_BUILD_DIRECTORY>
                                        <BASE_DIR>${project.basedir}</BASE_DIR>
                                        <CASSANDRA_VERSION>${it.cassandra.version}</CASSANDRA_VERSION>
                                        <JOLOKIA_ENABLED>${it.jolokia.enabled}</JOLOKIA_ENABLED>
                                    </environmentVariables>
                                    <redirectOutput>true</redirectOutput>
                                    <redirectErrorStream>true</redirectErrorStream>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>

                    <!-- Docker -->
                    <plugin>
                        <groupId>io.fabric8</groupId>
                        <artifactId>docker-maven-plugin</artifactId>
                    </plugin>
                </plugins>
            </build>
        </profile>
         <profile>
            <activation>
                <property>
                    <name>localprecommit.tests</name>
                </property>
            </activation>
            <id>local-python-integration-tests</id>
            <build>
                <plugins>
                    <!-- Integration tests -->
                    <plugin>
                        <artifactId>maven-dependency-plugin</artifactId>
                        <executions>
                            <execution>
                                <id>unpack-ecc-binary</id>
                                <phase>pre-integration-test</phase>
                                <goals>
                                    <goal>unpack</goal>
                                </goals>
                                <configuration>
                                    <artifactItems>
                                        <artifactItem>
                                            <groupId>com.ericsson.bss.cassandra.ecchronos</groupId>
                                            <artifactId>ecchronos-binary</artifactId>
                                            <version>${project.version}</version>
                                            <type>tar.gz</type>
                                            <outputDirectory>${project.build.directory}/test</outputDirectory>
                                        </artifactItem>
                                    </artifactItems>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>
                    <plugin>
                        <groupId>org.codehaus.mojo</groupId>
                        <artifactId>exec-maven-plugin</artifactId>
                        <executions>
                            <execution>
                                <id>install-python-dependencies</id>
                                <phase>pre-integration-test</phase>
                                <goals>
                                    <goal>exec</goal>
                                </goals>
                                <configuration>
                                    <executable>bash</executable>
                                    <arguments>
                                        <argument>install_dependencies.sh</argument>
                                    </arguments>
                                    <workingDirectory>${project.build.directory}/test</workingDirectory>
                                    <environmentVariables>
                                        <PROJECT_VERSION>${project.version}</PROJECT_VERSION>
                                        <PROJECT_BUILD_DIRECTORY>${project.build.directory}</PROJECT_BUILD_DIRECTORY>
                                        <BASE_DIR>${project.basedir}</BASE_DIR>
                                        <CASSANDRA_VERSION>${it.cassandra.version}</CASSANDRA_VERSION>
                                        <JOLOKIA_ENABLED>${it.jolokia.enabled}</JOLOKIA_ENABLED>
                                    </environmentVariables>
                                </configuration>
                            </execution>
                            <execution>
                                <id>python-integration-tests</id>
                                <phase>integration-test</phase>
                                <goals>
                                    <goal>exec</goal>
                                </goals>
                                <configuration>
                                    <executable>bash</executable>
                                    <arguments>
                                        <argument>-c</argument>
                                        <argument>if [ -f venv/bin/activate ]; then source venv/bin/activate; fi &amp;&amp; python -m pytest test_ecchronos.py -s -v --tb=short</argument>
                                    </arguments>
                                    <workingDirectory>${project.build.directory}/test</workingDirectory>
                                    <environmentVariables>
                                        <LOCAL>true</LOCAL>
                                        <PROJECT_VERSION>${project.version}</PROJECT_VERSION>
                                        <PROJECT_BUILD_DIRECTORY>${project.build.directory}</PROJECT_BUILD_DIRECTORY>
                                        <BASE_DIR>${project.basedir}</BASE_DIR>
                                        <CASSANDRA_VERSION>${it.cassandra.version}</CASSANDRA_VERSION>
                                        <JOLOKIA_ENABLED>${it.jolokia.enabled}</JOLOKIA_ENABLED>
                                    </environmentVariables>
                                    <redirectOutput>true</redirectOutput>
                                    <redirectErrorStream>true</redirectErrorStream>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>
        <profile>
            <id>generate-ecctool-doc</id>
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.codehaus.mojo</groupId>
                        <artifactId>exec-maven-plugin</artifactId>
                        <executions>
                            <execution>
                                <id>generate-ecctool-doc</id>
                                <phase>compile</phase>
                                <goals>
                                    <goal>exec</goal>
                                </goals>
                                <configuration>
                                    <executable>bash</executable>
                                    <arguments>
                                        <argument>generate-ecctool-doc.sh</argument>
                                    </arguments>
                                    <workingDirectory>${project.basedir}</workingDirectory>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>
    </profiles>

</project>