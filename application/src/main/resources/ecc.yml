#
# Copyright 2024 Telefonaktiebolaget LM Ericsson
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#

### ecChronos agent configuration

## Connection
## Properties for connection to Cassandra nodes
##
connection:
  cql:
    ## Configuration to define Agent Strategy and hosts for ecChronos
    ## to connect to. The application will use the configurations
    ## specified below, connecting to the listed hosts;
    agent:
      ## Define the Agent strategy, it can be
      ## - datacenterAware;
      ## - rackAware; and
      ## - hostAware.
      type: datacenterAware
      ## Specifies the datacenter that is considered "local" by the load balancing policy,
      ## The specified datacenter should match with the contact point datacenter
      localDatacenter: datacenter1
      ## A custom load balancing policy extended to allow the local
      ## datacenter to be replaced with a specified data center when
      ## creating a new plan, this is used just if the agent.type is datacenterAware
      datacenterAwarePolicy: com.ericsson.bss.cassandra.ecchronos.connection.DataCenterAwarePolicy
      ## Initial contact points list for ecChronos
      ## to establish first connection with Cassandra.
      contactPoints:
        - host: 127.0.0.1
          port: 9042
        - host: 127.0.0.2
          port: 9042
      ## Configuration to define datacenters for ecchronos
      ## to connect to, datacenterAware enable means that
      ## ecChronos will be responsible for all nodes in the
      ## datacenter list.
      datacenterAware:
        datacenters:
          - name: datacenter1
          - name: datacenter2
      ## Configuration to define racks for ecchronos
      ## to connect to, rackAware enable means that
      ## ecChronos will be responsible for all nodes in the
      ## rack list, this configuration is designed to manage
      ## racks on the same datacenter.
      rackAware:
        racks:
          - datacenterName: datacenter1
            rackName: rack1
          - datacenterName: datacenter1
            rackName: rack2
      ## Configuration to define hosts for ecchronos
      ## to connect to, hostAware enable means that
      ## ecChronos will be responsible just for the
      ## specified hosts list.
      hostAware:
        hosts:
          - host: 127.0.0.1
            port: 9042
          - host: 127.0.0.2
            port: 9042
          - host: 127.0.0.3
            port: 9042
          - host: 127.0.0.4
            port: 9042
    ##
    ## The class used to provide CQL connections to Apache Cassandra.
    ## The default provider will be used unless another is specified.
    ## The default provider will be used unless another is specified.
    ##
    provider: com.ericsson.bss.cassandra.ecchronos.application.providers.AgentNativeConnectionProvider
    ##
    ## The class used to provide an SSL context to the NativeConnectionProvider.
    ## Extending this allows to manipulate the SSLEngine and SSLParameters.
    ##
    certificateHandler: com.ericsson.bss.cassandra.ecchronos.application.config.security.ReloadingCertificateHandler
    ##
    ## Specify the interval until the next connection to a node
    ## Unit can be SECONDS, MINUTES, HOURS, DAYS
    ##
    connectionDelay:
      time: 45
      unit: MINUTES
  jmx:
    ##
    ## The class used to provide JMX connections to Apache Cassandra.
    ## The default provider will be used unless another is specified.
    ##
    provider: com.ericsson.bss.cassandra.ecchronos.application.providers.AgentJmxConnectionProvider
    retryPolicy:
      ## Max number of attempts ecChronos will try to connect with Cassandra.
      maxAttempts: 5
      ## Delay use to wait between an attempt and another, this value will be multiplied by the current attempt count powered by two.
      ## If the current attempt is 4 and the default delay is 5 seconds, so ((4(attempt) x 2) x 5(default delay)) = 40 seconds.
      ## If the calculated delay is greater than maxDelay, maxDelay will be used instead of the calculated delay.
      delay:
        start: 5
        ## Maximum delay before the next connection attempt is made.
        ## Setting it as 0 will disable maxDelay and the delay interval will
        ## be calculated based on the attempt count and the default delay.
        max: 30
        ## unit can be milliseconds, seconds, minutes, hours, days.
        unit: seconds
      # RetrySchedulerService schedule starts after the application launches.
      retrySchedule:
        ## Initial delay before the RetrySchedulerService starts after the application launches.
        ## By default, this service would trigger after 1 day and represents the wait time before the service first runs
        initialDelay: 1
        ## Fixed delay between subsequent executions of the RetrySchedulerService.
        ## This value represents the delay time (by default 1 day) between when the service completes one execution
        ## and the time it will be triggered again for another execution.
        ## During each execution, the service will check for unavailable nodes and attempt reconnections as per the retry logic.
        fixedDelay: 1
        ## unit can be milliseconds, seconds, minutes, hours, days.
        unit: days

rest_server:
  ##
  ## The host and port used for the HTTP server
  ##
  host: localhost
  port: 8080
