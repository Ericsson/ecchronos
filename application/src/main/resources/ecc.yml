#
# Copyright 2020 Telefonaktiebolaget LM Ericsson
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#

### ecChronos configuration

## Connection
## Properties for connection to the local node
##
connection:
  cql:
    ##
    ## Host and port properties for CQL.
    ## Primarily used by the default connection provider
    ##
    host: localhost
    port: 9042
    ##
    ## Connection Timeout for CQL.
    ## Specify a time to wait for cassandra to come up.
    ## Connection is tried every five second until either the timeout time passes or the connection is successful.
    ##
    timeout:
      time: 0
      unit: seconds
    ##
    ## The class used to provide CQL connections to Apache Cassandra.
    ## The default provider will be used unless another is specified.
    ##
    provider: com.ericsson.bss.cassandra.ecchronos.application.DefaultNativeConnectionProvider
    ##
    ## The class used to decorate CQL statements.
    ## The default no-op decorator will be used unless another is specified.
    ##
    decoratorClass: com.ericsson.bss.cassandra.ecchronos.application.NoopStatementDecorator
  jmx:
    ##
    ## Host and port properties for JMX.
    ## Primarily used by the default connection provider.
    ##
    host: localhost
    port: 7199
    ##
    ## The class used to provide JMX connections to Apache Cassandra.
    ## The default provider will be used unless another is specified.
    ##
    provider: com.ericsson.bss.cassandra.ecchronos.application.DefaultJmxConnectionProvider

## Repair configuration
## This section defines default repair behavior for all tables.
##
repair:
  ##
  ## How often repairs should be triggered for tables.
  ##
  interval:
    time: 7
    unit: days
  ##
  ## Specifies the parallelism to use for repairs.
  ## Possible values are "parallel".
  ##
  parallelism: parallel
  ##
  ## Specifies the type of lock to use for repairs.
  ## "vnode" will lock each node involved in a repair individually and increase the number of
  ## parallel repairs that can run in a single data center.
  ## "datacenter" will lock each data center involved in a repair and only allow a single repair per data center.
  ## "datacenter_and_vnode" will combine both options and allow a smooth transition between them without allowing
  ## multiple repairs to run concurrently on a single node.
  ##
  lock_type: vnode
  ##
  ## Alarms are triggered when tables have not been repaired for a long amount of time.
  ## The warning alarm is meant to indicate early that repairs are falling behind.
  ## The error alarm is meant to indicate that gc_grace has passed between repairs.
  ##
  ## With the defaults where repairs triggers once every 7 days for each table a warning alarm would be raised
  ## if the table has not been properly repaired within one full day.
  ##
  alarm:
    ##
    ## If a table has not been repaired for the following duration an warning alarm will be raised.
    ##
    warn:
      time: 8
      unit: days
    ##
    ## If a table has not been repaired for the following duration an error alarm will be raised.
    ##
    error:
      time: 10
      unit: days
  ##
  ## Specifies the unwind ratio to smooth out the load that repairs generate.
  ## This value is a ratio between 0 -> 100% of the execution time of a repair session.
  ##
  ## 100% means that the executor will wait to run the next session for as long time as the previous session took.
  ##
  unwind_ratio: 0.0
  ##
  ## Specifies the lookback time for when the repair_history table is queried to get initial repair state at startup.
  ## The time should match the "expected TTL" of the system_distributed.repair_history table.
  ##
  history_lookback:
    time: 30
    unit: days
  ##
  ## Specifies a target for how much data each repair session should process.
  ## This is an estimation assuming uniform data distribution among partition keys.
  ## The value should be either a number or a number with a unit of measurement:
  ## 12  (12 B)
  ## 12k (1 KiB)
  ## 12m (1 MiB)
  ## 12g (1 GiB)
  ##
  size_target:

statistics:
  enabled: true
  directory: ./statistics

lock_factory:
  cas:
    ##
    ## The keyspace used for the CAS lock factory tables.
    ##
    keyspace: ecchronos

run_policy:
  time_based:
    ##
    ## The keyspace used for the time based run policy tables.
    ##
    keyspace: ecchronos

scheduler:
  ##
  ## Specifies the frequency the scheduler checks for work to be done
  ##
  frequency:
    time: 30
    unit: SECONDS

rest_server:
  ##
  ## The host and port used for the HTTP server
  ##
  host: localhost
  port: 8080
