openapi: 3.0.1
info:
  title: REST API
  license:
    name: Apache 2.0
    url: https://www.apache.org/licenses/LICENSE-2.0
  version: 1.0.0
servers:
- url: https://localhost:8080
  description: Generated server url
tags:
- name: Repair-Management
  description: Management of repairs
- name: Metrics
  description: Retrieve metrics about ecChronos
- name: Actuator
  description: Monitor and interact
  externalDocs:
    description: Spring Boot Actuator Web API Documentation
    url: https://docs.spring.io/spring-boot/docs/current/actuator-api/html/
paths:
  /repair-management/v2/repairs:
    get:
      tags:
      - Repair-Management
      summary: Get manual repairs.
      description: Get manual repairs which are running/completed/failed.
      operationId: get-repairs
      parameters:
      - name: keyspace
        in: query
        description: "Only return repairs matching the keyspace, mandatory if 'table'\
          \ is provided."
        required: false
        schema:
          type: string
      - name: table
        in: query
        description: Only return repairs matching the table.
        required: false
        schema:
          type: string
      - name: hostId
        in: query
        description: Only return repairs matching the hostId.
        required: false
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/OnDemandRepair'
    post:
      tags:
      - Repair-Management
      summary: Run a manual repair.
      description: "Run a manual repair, if 'isLocal' is not provided this will run\
        \ a cluster-wide repair."
      operationId: run-repair
      parameters:
      - name: keyspace
        in: query
        description: "The keyspace to run repair for, mandatory if 'table' is provided."
        required: false
        schema:
          type: string
      - name: table
        in: query
        description: The table to run repair for.
        required: false
        schema:
          type: string
      - name: isLocal
        in: query
        description: "Decides if the repair should be only for the local node, i.e\
          \ not cluster-wide."
        required: false
        schema:
          type: boolean
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/OnDemandRepair'
  /repair-management/v2/schedules:
    get:
      tags:
      - Repair-Management
      summary: Get schedules
      description: Get schedules
      operationId: get-schedules
      parameters:
      - name: keyspace
        in: query
        description: "Filter schedules based on this keyspace, mandatory if 'table'\
          \ is provided."
        required: false
        schema:
          type: string
      - name: table
        in: query
        description: Filter schedules based on this table.
        required: false
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Schedule'
  /repair-management/v2/schedules/{id}:
    get:
      tags:
      - Repair-Management
      summary: Get schedules matching the id.
      description: Get schedules matching the id.
      operationId: get-schedules-by-id
      parameters:
      - name: id
        in: path
        description: The id of the schedule.
        required: true
        schema:
          type: string
      - name: full
        in: query
        description: Decides if a 'full schedule' should be returned.
        required: false
        schema:
          type: boolean
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Schedule'
  /repair-management/v2/repairs/{id}:
    get:
      tags:
      - Repair-Management
      summary: Get manual repairs matching the id.
      description: Get manual repairs matching the id which are running/completed/failed.
      operationId: get-repairs-by-id
      parameters:
      - name: id
        in: path
        description: Only return repairs matching the id.
        required: true
        schema:
          type: string
      - name: hostId
        in: query
        description: Only return repairs matching the hostId.
        required: false
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/OnDemandRepair'
  /repair-management/v2/repairInfo:
    get:
      tags:
      - Repair-Management
      summary: Get repair information
      description: "Get repair information, if keyspace and table are provided while\
        \ duration and since are not, the duration will default to GC_GRACE_SECONDS\
        \ of the table. This operation might take time depending on the provided params\
        \ since it's based on the repair history."
      operationId: get-repair-info
      parameters:
      - name: keyspace
        in: query
        description: "Only return repair-info matching the keyspace, mandatory if\
          \ 'table' is provided."
        required: false
        schema:
          type: string
      - name: table
        in: query
        description: Only return repair-info matching the table.
        required: false
        schema:
          type: string
      - name: since
        in: query
        description: "Since time, can be specified as ISO8601 date or as milliseconds\
          \ since epoch. Required if keyspace and table or duration is not specified."
        required: false
        schema:
          type: string
      - name: duration
        in: query
        description: "Duration, can be specified as either a simple duration like\
          \ '30s' or as ISO8601 duration 'pt30s'. Required if keyspace and table or\
          \ since is not specified."
        required: false
        schema:
          type: string
      - name: isLocal
        in: query
        description: Decides if the repair-info should be calculated for the local
          node only.
        required: false
        schema:
          type: boolean
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RepairInfo'
  /metrics:
    get:
      tags:
      - Metrics
      summary: Get metrics
      description: Get metrics in the specified format
      operationId: metrics
      parameters:
      - name: Accept
        in: header
        required: false
        schema:
          type: string
          default: text/plain; version=0.0.4; charset=utf-8
      - name: "name[]"
        in: query
        description: Filter metrics based on these names.
        required: false
        schema:
          uniqueItems: true
          type: array
          items:
            type: string
          default: []
      responses:
        "200":
          description: OK
          content:
            text/plain;version=0.0.4;charset=utf-8:
              schema:
                type: string
            application/openmetrics-text;version=1.0.0;charset=utf-8:
              schema:
                type: string
  /actuator:
    get:
      tags:
      - Actuator
      summary: Actuator root web endpoint
      operationId: links
      responses:
        "200":
          description: OK
          content:
            application/vnd.spring-boot.actuator.v3+json:
              schema:
                type: object
                additionalProperties:
                  type: object
                  additionalProperties:
                    $ref: '#/components/schemas/Link'
            application/vnd.spring-boot.actuator.v2+json:
              schema:
                type: object
                additionalProperties:
                  type: object
                  additionalProperties:
                    $ref: '#/components/schemas/Link'
            application/json:
              schema:
                type: object
                additionalProperties:
                  type: object
                  additionalProperties:
                    $ref: '#/components/schemas/Link'
  /actuator/health:
    get:
      tags:
      - Actuator
      summary: Actuator web endpoint 'health'
      operationId: health
      responses:
        "200":
          description: OK
          content:
            application/vnd.spring-boot.actuator.v3+json:
              schema:
                type: object
            application/vnd.spring-boot.actuator.v2+json:
              schema:
                type: object
            application/json:
              schema:
                type: object
  /actuator/health/**:
    get:
      tags:
      - Actuator
      summary: Actuator web endpoint 'health-path'
      operationId: health-path
      responses:
        "200":
          description: OK
          content:
            application/vnd.spring-boot.actuator.v3+json:
              schema:
                type: object
            application/vnd.spring-boot.actuator.v2+json:
              schema:
                type: object
            application/json:
              schema:
                type: object
components:
  schemas:
    OnDemandRepair:
      required:
      - completedAt
      - hostId
      - id
      - keyspace
      - repairedRatio
      - status
      - table
      type: object
      properties:
        id:
          type: string
          format: uuid
        hostId:
          type: string
          format: uuid
        keyspace:
          type: string
        table:
          type: string
        status:
          type: string
          enum:
          - COMPLETED
          - IN_QUEUE
          - WARNING
          - ERROR
          - BLOCKED
        repairedRatio:
          maximum: 1
          minimum: 0
          type: number
          format: double
        completedAt:
          minimum: -1
          type: integer
          format: int64
    Schedule:
      required:
      - config
      - id
      - keyspace
      - lastRepairedAtInMs
      - nextRepairInMs
      - repairedRatio
      - status
      - table
      type: object
      properties:
        id:
          type: string
          format: uuid
        keyspace:
          type: string
        table:
          type: string
        status:
          type: string
          enum:
          - COMPLETED
          - ON_TIME
          - LATE
          - OVERDUE
          - BLOCKED
        repairedRatio:
          maximum: 1
          minimum: 0
          type: number
          format: double
        lastRepairedAtInMs:
          type: integer
          format: int64
        nextRepairInMs:
          type: integer
          format: int64
        config:
          $ref: '#/components/schemas/ScheduleConfig'
        virtualNodeStates:
          type: array
          items:
            $ref: '#/components/schemas/VirtualNodeState'
    ScheduleConfig:
      required:
      - errorTimeInMs
      - intervalInMs
      - parallelism
      - unwindRatio
      - warningTimeInMs
      type: object
      properties:
        intervalInMs:
          minimum: 0
          type: integer
          format: int64
        unwindRatio:
          minimum: 0
          type: number
          format: double
        warningTimeInMs:
          minimum: 0
          type: integer
          format: int64
        errorTimeInMs:
          minimum: 0
          type: integer
          format: int64
        parallelism:
          type: string
          enum:
          - PARALLEL
    VirtualNodeState:
      required:
      - endToken
      - lastRepairedAtInMs
      - repaired
      - replicas
      - startToken
      type: object
      properties:
        startToken:
          minimum: -9223372036854775808
          type: integer
          format: int64
        endToken:
          maximum: 9223372036854775807
          type: integer
          format: int64
        replicas:
          uniqueItems: true
          type: array
          items:
            type: string
        lastRepairedAtInMs:
          minimum: 0
          type: integer
          format: int64
        repaired:
          type: boolean
    RepairInfo:
      required:
      - repairStats
      - sinceInMs
      - toInMs
      type: object
      properties:
        sinceInMs:
          minimum: 0
          type: integer
          format: int64
        toInMs:
          minimum: 0
          type: integer
          format: int64
        repairStats:
          type: array
          items:
            $ref: '#/components/schemas/RepairStats'
    RepairStats:
      required:
      - keyspace
      - repairTimeTakenMs
      - repairedRatio
      - table
      type: object
      properties:
        keyspace:
          type: string
        table:
          type: string
        repairedRatio:
          maximum: 1
          minimum: 0
          type: number
          format: double
        repairTimeTakenMs:
          minimum: 0
          type: integer
          format: int64
    Link:
      type: object
      properties:
        href:
          type: string
        templated:
          type: boolean
