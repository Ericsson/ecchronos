<?xml version="1.0" encoding="UTF-8"?>
<!--

    Copyright 2018 Telefonaktiebolaget LM Ericsson

    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
    You may obtain a copy of the License at
        http://www.apache.org/licenses/LICENSE-2.0

    Unless required by applicable law or agreed to in writing, software
    distributed under the License is distributed on an "AS IS" BASIS,
    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
    See the License for the specific language governing permissions and
    limitations under the License.

-->
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <groupId>com.ericsson.bss.cassandra.ecchronos</groupId>
    <artifactId>parent</artifactId>
    <version>2.0.0-SNAPSHOT</version>
    <packaging>pom</packaging>

    <name>Ericsson Cassandra Chronos</name>
    <description>
        A distributed repair scheduler for Apache Cassandra.
    </description>
    <url>https://github.com/ericsson/ecchronos</url>

    <licenses>
        <license>
            <name>Apache License, Version 2.0</name>
            <url>https://www.apache.org/licenses/LICENSE-2.0.txt</url>
        </license>
    </licenses>

    <modules>
        <module>fm</module>
        <module>core</module>
        <module>core.osgi</module>
        <module>connection</module>
        <module>connection.impl</module>
        <module>fm.impl</module>
        <module>rest</module>
        <module>rest.osgi</module>
        <module>application</module>
        <module>cassandra-test-image</module>
        <module>ecchronos-binary</module>
        <module>karaf-feature</module>
        <module>osgi-integration</module>
        <module>standalone-integration</module>
    </modules>

    <properties>
        <bundle.symbolicName>${project.groupId}.${project.artifactId}</bundle.symbolicName>
        <bundle.namespace>${project.groupId}.${project.artifactId}</bundle.namespace>

        <!-- Dependency versions -->
        <io.netty.version>4.0.47.Final</io.netty.version>
        <io.dropwizard.metrics.version>3.2.2</io.dropwizard.metrics.version>
        <cassandra.driver.core.version>3.10.2</cassandra.driver.core.version>
        <guava.version>18.0</guava.version>
        <slf4j.version>1.7.23</slf4j.version>
        <logback.version>1.2.3</logback.version>
        <cassandra.version>3.0.15</cassandra.version>
        <gson.version>2.8.5</gson.version>
        <osgi.version>1.3.0</osgi.version>
        <mockito.version>1.10.19</mockito.version>
        <assertj.version>3.11.1</assertj.version>
        <junit.version>4.13</junit.version>
        <org.apache.commons.io.version>1.3.2</org.apache.commons.io.version>
        <com.fasterxml.jackson.version>2.11.2</com.fasterxml.jackson.version>

        <pax-exam.version>4.13.1</pax-exam.version>
        <pax-logging-logback.version>1.8.4</pax-logging-logback.version>
        <apache.karaf.version>4.1.4</apache.karaf.version>
        <org.apache.felix.scr.version>2.1.14</org.apache.felix.scr.version>
        <pax-url.version>2.4.7</pax-url.version>
        <javax.inject.version>1</javax.inject.version>
        <awaitility.version>3.0.0</awaitility.version>
        <jcip.version>1.0</jcip.version>
        <junitparams.version>1.1.1</junitparams.version>
        <equalsverifier.version>3.1.10</equalsverifier.version>

        <!-- Plugin versions -->
        <org.apache.maven.plugins.maven-compiler-plugin.version>3.8.0</org.apache.maven.plugins.maven-compiler-plugin.version>
        <org.apache.maven.plugins.maven-install-plugin.version>2.5.2</org.apache.maven.plugins.maven-install-plugin.version>
        <org.apache.maven.plugins.maven-surefire-plugin.version>2.22.1</org.apache.maven.plugins.maven-surefire-plugin.version>
        <org.apache.maven.plugins.maven-failsafe-plugin.version>2.22.1</org.apache.maven.plugins.maven-failsafe-plugin.version>
        <org.apache.maven.plugins.maven-assembly-plugin.version>3.1.0</org.apache.maven.plugins.maven-assembly-plugin.version>
        <org.apache.maven.plugins-maven-pmd-plugin.version>3.13.0</org.apache.maven.plugins-maven-pmd-plugin.version>
        <org.apache.maven.plugin.maven-jxr-plugin.version>3.0.0</org.apache.maven.plugin.maven-jxr-plugin.version>
        <org.apache.maven.plugins-maven-resources-plugin.version>3.1.0</org.apache.maven.plugins-maven-resources-plugin.version>
        <org.apache.maven.plugins-maven-dependency-plugin.version>3.1.1</org.apache.maven.plugins-maven-dependency-plugin.version>
        <org.apache.maven.plugins-maven-jar-plugin.version>2.6</org.apache.maven.plugins-maven-jar-plugin.version>
        <org.apache.felix.maven-bundle-plugin.version>3.2.0</org.apache.felix.maven-bundle-plugin.version>
        <com.mycila.license-maven-plugin.version>3.0</com.mycila.license-maven-plugin.version>
        <io.fabric8.docker-maven-plugin.version>0.34.0</io.fabric8.docker-maven-plugin.version>
        <org.apache.servicemix.tooling.depends-maven-plugin.version>1.2</org.apache.servicemix.tooling.depends-maven-plugin.version>
        <org.apache.karaf.tooling.karaf-maven-plugin.version>3.0.3</org.apache.karaf.tooling.karaf-maven-plugin.version>
        <org.eluder.coveralls.coveralls-maven-plugin.version>4.3.0</org.eluder.coveralls.coveralls-maven-plugin.version>
        <org.jacoco.jacoco-maven-plugin.version>0.8.4</org.jacoco.jacoco-maven-plugin.version>
        <org.codehaus.mojo.exec-maven-plugin.version>3.0.0</org.codehaus.mojo.exec-maven-plugin.version>
        <org.codehaus.mojo.license-maven-plugin.version>1.19</org.codehaus.mojo.license-maven-plugin.version>
        <org.springframework.boot.version>2.3.4.RELEASE</org.springframework.boot.version>

        <org.apache.maven.plugins.maven-release-plugin.version>2.5.3</org.apache.maven.plugins.maven-release-plugin.version>
        <org.apache.maven.plugins.maven-deploy-plugin.version>2.8.2</org.apache.maven.plugins.maven-deploy-plugin.version>
        <org.apache.maven.plugins.maven-source-plugin.version>3.0.1</org.apache.maven.plugins.maven-source-plugin.version>
        <org.apache.maven.plugins.maven-javadoc-plugin.version>3.0.1</org.apache.maven.plugins.maven-javadoc-plugin.version>
        <org.apache.maven.plugins.maven-gpg-plugin.version>1.6</org.apache.maven.plugins.maven-gpg-plugin.version>

        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>

        <skipTests>false</skipTests>
        <skipUTs>${skipTests}</skipUTs>

        <!-- Integration tests -->
        <it.cassandra.memory>1073741824</it.cassandra.memory>
        <it.cassandra.heap>256M</it.cassandra.heap>
        <it.cassandra.version>3.11</it.cassandra.version>
    </properties>

    <dependencyManagement>
        <dependencies>
            <!-- Netty -->
            <dependency>
                <groupId>io.netty</groupId>
                <artifactId>netty-common</artifactId>
                <version>${io.netty.version}</version>
            </dependency>

            <dependency>
                <groupId>io.netty</groupId>
                <artifactId>netty-transport</artifactId>
                <version>${io.netty.version}</version>
            </dependency>

            <dependency>
                <groupId>io.netty</groupId>
                <artifactId>netty-buffer</artifactId>
                <version>${io.netty.version}</version>
            </dependency>

            <dependency>
                <groupId>io.netty</groupId>
                <artifactId>netty-handler</artifactId>
                <version>${io.netty.version}</version>
            </dependency>

            <dependency>
                <groupId>io.netty</groupId>
                <artifactId>netty-codec</artifactId>
                <version>${io.netty.version}</version>
            </dependency>

            <!-- Metrics -->
            <dependency>
                <groupId>io.dropwizard.metrics</groupId>
                <artifactId>metrics-core</artifactId>
                <version>${io.dropwizard.metrics.version}</version>
            </dependency>

            <!-- Cassandra Driver -->
            <dependency>
                <groupId>com.datastax.cassandra</groupId>
                <artifactId>cassandra-driver-core</artifactId>
                <version>${cassandra.driver.core.version}</version>
            </dependency>

            <dependency>
                <groupId>com.google.guava</groupId>
                <artifactId>guava</artifactId>
                <version>${guava.version}</version>
            </dependency>

            <dependency>
                <groupId>org.slf4j</groupId>
                <artifactId>slf4j-api</artifactId>
                <version>${slf4j.version}</version>
            </dependency>

            <dependency>
                <groupId>ch.qos.logback</groupId>
                <artifactId>logback-classic</artifactId>
                <version>${logback.version}</version>
            </dependency>

            <dependency>
                <groupId>ch.qos.logback</groupId>
                <artifactId>logback-core</artifactId>
                <version>${logback.version}</version>
            </dependency>

            <dependency>
                <groupId>org.apache.cassandra</groupId>
                <artifactId>cassandra-all</artifactId>
                <version>${cassandra.version}</version>
                <scope>test</scope>
            </dependency>

            <!-- Spring boot -->
            <dependency>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-dependencies</artifactId>
                <version>${org.springframework.boot.version}</version>
                <type>pom</type>
            </dependency>

            <dependency>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-starter-web</artifactId>
                <version>${org.springframework.boot.version}</version>
            </dependency>

            <dependency>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-starter-actuator</artifactId>
                <version>${org.springframework.boot.version}</version>
            </dependency>

            <!-- REST -->
            <dependency>
                <groupId>com.google.code.gson</groupId>
                <artifactId>gson</artifactId>
                <version>${gson.version}</version>
            </dependency>

            <!-- Jackson -->
            <dependency>
                <groupId>com.fasterxml.jackson.core</groupId>
                <artifactId>jackson-core</artifactId>
                <version>${com.fasterxml.jackson.version}</version>
            </dependency>

            <dependency>
                <groupId>com.fasterxml.jackson.core</groupId>
                <artifactId>jackson-annotations</artifactId>
                <version>${com.fasterxml.jackson.version}</version>
            </dependency>

            <dependency>
                <groupId>com.fasterxml.jackson.dataformat</groupId>
                <artifactId>jackson-dataformat-yaml</artifactId>
                <version>${com.fasterxml.jackson.version}</version>
            </dependency>

            <dependency>
                <groupId>com.fasterxml.jackson.core</groupId>
                <artifactId>jackson-databind</artifactId>
                <version>${com.fasterxml.jackson.version}</version>
            </dependency>

            <!-- OSGi -->
            <dependency>
                <groupId>org.osgi</groupId>
                <artifactId>org.osgi.service.component.annotations</artifactId>
                <version>${osgi.version}</version>
                <scope>provided</scope>
            </dependency>

            <dependency>
                <groupId>org.osgi</groupId>
                <artifactId>org.osgi.service.metatype.annotations</artifactId>
                <version>${osgi.version}</version>
                <scope>provided</scope>
            </dependency>

            <!-- test -->
            <dependency>
                <groupId>org.mockito</groupId>
                <artifactId>mockito-all</artifactId>
                <version>${mockito.version}</version>
                <scope>test</scope>
            </dependency>

            <dependency>
                <groupId>org.assertj</groupId>
                <artifactId>assertj-core</artifactId>
                <version>${assertj.version}</version>
                <scope>test</scope>
            </dependency>

            <dependency>
                <groupId>junit</groupId>
                <artifactId>junit</artifactId>
                <version>${junit.version}</version>
                <scope>test</scope>
            </dependency>

            <dependency>
                <groupId>commons-io</groupId>
                <artifactId>commons-io</artifactId>
                <version>${org.apache.commons.io.version}</version>
                <scope>test</scope>
            </dependency>

            <!-- Pax exam -->
            <dependency>
                <groupId>org.ops4j.pax.exam</groupId>
                <artifactId>pax-exam-container-karaf</artifactId>
                <version>${pax-exam.version}</version>
                <scope>test</scope>
            </dependency>

            <dependency>
                <groupId>org.ops4j.pax.exam</groupId>
                <artifactId>pax-exam-cm</artifactId>
                <version>${pax-exam.version}</version>
                <scope>test</scope>
            </dependency>

            <dependency>
                <groupId>org.ops4j.pax.exam</groupId>
                <artifactId>pax-exam-junit4</artifactId>
                <version>${pax-exam.version}</version>
                <scope>test</scope>
            </dependency>

            <dependency>
                <groupId>org.apache.karaf</groupId>
                <artifactId>apache-karaf</artifactId>
                <version>${apache.karaf.version}</version>
                <scope>test</scope>
                <type>zip</type>
            </dependency>

            <dependency>
                <groupId>org.apache.karaf.features</groupId>
                <artifactId>standard</artifactId>
                <version>${apache.karaf.version}</version>
                <scope>test</scope>
                <classifier>features</classifier>
                <type>xml</type>
            </dependency>

            <dependency>
                <groupId>org.apache.karaf.shell</groupId>
                <artifactId>org.apache.karaf.shell.core</artifactId>
                <version>${apache.karaf.version}</version>
            </dependency>

            <dependency>
                <groupId>org.apache.felix</groupId>
                <artifactId>org.apache.felix.scr</artifactId>
                <version>${org.apache.felix.scr.version}</version>
                <scope>test</scope>
            </dependency>

            <dependency>
                <groupId>javax.inject</groupId>
                <artifactId>javax.inject</artifactId>
                <version>${javax.inject.version}</version>
                <scope>test</scope>
            </dependency>

            <dependency>
                <groupId>org.awaitility</groupId>
                <artifactId>awaitility</artifactId>
                <version>${awaitility.version}</version>
                <scope>test</scope>
            </dependency>

            <dependency>
                <groupId>net.jcip</groupId>
                <artifactId>jcip-annotations</artifactId>
                <version>${jcip.version}</version>
                <scope>test</scope>
            </dependency>

            <dependency>
                <groupId>pl.pragmatists</groupId>
                <artifactId>JUnitParams</artifactId>
                <version>${junitparams.version}</version>
                <scope>test</scope>
            </dependency>

            <dependency>
                <groupId>nl.jqno.equalsverifier</groupId>
                <artifactId>equalsverifier</artifactId>
                <version>${equalsverifier.version}</version>
                <scope>test</scope>
            </dependency>
        </dependencies>
    </dependencyManagement>

    <build>
        <pluginManagement>
            <plugins>
                <plugin>
                    <artifactId>maven-pmd-plugin</artifactId>
                    <version>${org.apache.maven.plugins-maven-pmd-plugin.version}</version>
                    <configuration>
                        <rulesets>
                            <ruleset>${session.executionRootDirectory}/pmd-rules.xml</ruleset>
                        </rulesets>
                        <verbose>true</verbose>
                    </configuration>
                </plugin>

                <plugin>
                    <groupId>org.codehaus.mojo</groupId>
                    <artifactId>license-maven-plugin</artifactId>
                    <version>${org.codehaus.mojo.license-maven-plugin.version}</version>
                </plugin>

                <plugin>
                    <groupId>org.eluder.coveralls</groupId>
                    <artifactId>coveralls-maven-plugin</artifactId>
                    <version>${org.eluder.coveralls.coveralls-maven-plugin.version}</version>
                </plugin>

                <plugin>
                    <artifactId>maven-surefire-plugin</artifactId>
                    <version>${org.apache.maven.plugins.maven-surefire-plugin.version}</version>
                    <configuration>
                        <skipTests>${skipUTs}</skipTests>
                    </configuration>
                </plugin>

                <plugin>
                    <artifactId>maven-failsafe-plugin</artifactId>
                    <version>${org.apache.maven.plugins.maven-failsafe-plugin.version}</version>
                </plugin>

                <plugin>
                    <artifactId>maven-compiler-plugin</artifactId>
                    <version>${org.apache.maven.plugins.maven-compiler-plugin.version}</version>
                    <configuration>
                        <source>1.8</source>
                        <target>1.8</target>
                    </configuration>
                </plugin>

                <plugin>
                    <artifactId>maven-install-plugin</artifactId>
                    <version>${org.apache.maven.plugins.maven-install-plugin.version}</version>
                </plugin>

                <plugin>
                    <artifactId>maven-assembly-plugin</artifactId>
                    <version>${org.apache.maven.plugins.maven-assembly-plugin.version}</version>
                    <configuration>
                        <skipAssembly>true</skipAssembly>
                    </configuration>
                </plugin>

                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-dependency-plugin</artifactId>
                    <version>${org.apache.maven.plugins-maven-dependency-plugin.version}</version>
                </plugin>

                <plugin>
                    <groupId>org.apache.karaf.tooling</groupId>
                    <artifactId>karaf-maven-plugin</artifactId>
                    <version>${org.apache.karaf.tooling.karaf-maven-plugin.version}</version>
                </plugin>

                <plugin>
                    <groupId>org.apache.felix</groupId>
                    <artifactId>maven-bundle-plugin</artifactId>
                    <version>${org.apache.felix.maven-bundle-plugin.version}</version>
                </plugin>

                <plugin>
                    <groupId>io.fabric8</groupId>
                    <artifactId>docker-maven-plugin</artifactId>
                    <version>${io.fabric8.docker-maven-plugin.version}</version>
                </plugin>

                <plugin>
                    <groupId>org.springframework.boot</groupId>
                    <artifactId>spring-boot-maven-plugin</artifactId>
                    <version>${org.springframework.boot.version}</version>
                </plugin>

                <plugin>
                    <groupId>org.apache.servicemix.tooling</groupId>
                    <artifactId>depends-maven-plugin</artifactId>
                    <version>${org.apache.servicemix.tooling.depends-maven-plugin.version}</version>
                </plugin>

                <plugin>
                    <groupId>com.mycila</groupId>
                    <artifactId>license-maven-plugin</artifactId>
                    <version>${com.mycila.license-maven-plugin.version}</version>
                    <configuration>
                        <inlineHeader><![CDATA[
Copyright YEAR Telefonaktiebolaget LM Ericsson

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at
    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
]]>
                        </inlineHeader>
                        <mapping>
                            <java>SLASHSTAR_STYLE</java>
                        </mapping>
                        <strictCheck>true</strictCheck>
                        <failIfUnknown>true</failIfUnknown>
                        <headerSections>
                            <headerSection>
                                <key>YEAR</key>
                                <defaultValue>2019</defaultValue>
                                <ensureMatch>[0-9-]+</ensureMatch>
                            </headerSection>
                        </headerSections>
                        <excludes>
                            <exclude>src/test/resources/cassandra.yaml</exclude>
                            <exclude>src/test/resources/cassandra-rackdc.properties</exclude>
                            <exclude>**/*.cql</exclude>
                            <exclude>**/*.txt</exclude>
                            <exclude>**/pom.xml.tag</exclude>
                            <exclude>**/pom.xml.releaseBackup</exclude>
                            <exclude>**/*.options</exclude>
                            <exclude>release.properties</exclude>
                            <exclude>**/credentials.properties</exclude>
                            <exclude>**/*.feature</exclude>
                            <exclude>**/*.pyc</exclude>
                            <exclude>code_style.xml</exclude>
                            <exclude>**/Dockerfile</exclude>
                        </excludes>
                    </configuration>
                </plugin>

                <plugin>
                    <artifactId>maven-release-plugin</artifactId>
                    <version>${org.apache.maven.plugins.maven-release-plugin.version}</version>
                    <configuration>
                        <useReleaseProfile>false</useReleaseProfile>
                        <releaseProfiles>release</releaseProfiles>
                        <goals>deploy</goals>
                    </configuration>
                </plugin>

                <plugin>
                    <artifactId>maven-deploy-plugin</artifactId>
                    <version>${org.apache.maven.plugins.maven-deploy-plugin.version}</version>
                </plugin>

                <plugin>
                    <artifactId>maven-source-plugin</artifactId>
                    <version>${org.apache.maven.plugins.maven-source-plugin.version}</version>
                </plugin>

                <plugin>
                    <artifactId>maven-javadoc-plugin</artifactId>
                    <version>${org.apache.maven.plugins.maven-javadoc-plugin.version}</version>
                </plugin>

                <plugin>
                    <artifactId>maven-gpg-plugin</artifactId>
                    <version>${org.apache.maven.plugins.maven-gpg-plugin.version}</version>
                </plugin>

                <plugin>
                    <artifactId>maven-dependency-plugin</artifactId>
                    <version>${org.apache.maven.plugins-maven-dependency-plugin.version}</version>
                </plugin>

                <plugin>
                    <artifactId>maven-resources-plugin</artifactId>
                    <version>${org.apache.maven.plugins-maven-resources-plugin.version}</version>
                </plugin>

                <plugin>
                    <groupId>org.codehaus.mojo</groupId>
                    <artifactId>exec-maven-plugin</artifactId>
                    <version>${org.codehaus.mojo.exec-maven-plugin.version}</version>
                </plugin>

                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-jar-plugin</artifactId>
                    <version>${org.apache.maven.plugins-maven-jar-plugin.version}</version>
                </plugin>
            </plugins>
        </pluginManagement>

        <plugins>
            <plugin>
                <groupId>org.apache.felix</groupId>
                <artifactId>maven-bundle-plugin</artifactId>
                <extensions>true</extensions>
            </plugin>

            <plugin>
                <groupId>org.jacoco</groupId>
                <artifactId>jacoco-maven-plugin</artifactId>
                <version>${org.jacoco.jacoco-maven-plugin.version}</version>
                <executions>
                    <execution>
                        <id>prepare-agent</id>
                        <goals>
                            <goal>prepare-agent</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>

            <plugin>
                <artifactId>maven-compiler-plugin</artifactId>
            </plugin>
        </plugins>
    </build>

    <profiles>
        <profile>
            <id>release</id>
            <activation>
                <activeByDefault>false</activeByDefault>
            </activation>
            <build>
                <plugins>
                    <plugin>
                        <artifactId>maven-source-plugin</artifactId>
                        <executions>
                            <execution>
                                <id>attach-sources</id>
                                <phase>package</phase>
                                <goals>
                                    <goal>jar-no-fork</goal>
                                </goals>
                            </execution>
                        </executions>
                    </plugin>

                    <plugin>
                        <artifactId>maven-javadoc-plugin</artifactId>
                        <executions>
                            <execution>
                                <id>attach-javadocs</id>
                                <phase>package</phase>
                                <goals>
                                    <goal>jar</goal>
                                </goals>
                                <configuration>
                                    <quiet>true</quiet>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>

                    <plugin>
                        <artifactId>maven-gpg-plugin</artifactId>
                        <executions>
                            <execution>
                                <id>sign-artifacts</id>
                                <phase>verify</phase>
                                <goals>
                                    <goal>sign</goal>
                                </goals>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>

        <profile>
            <id>docker-integration-test</id>
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.codehaus.mojo</groupId>
                        <artifactId>exec-maven-plugin</artifactId>
                        <executions>
                            <execution>
                                <id>generate-certificates-directory</id>
                                <phase>package</phase>
                                <goals>
                                    <goal>exec</goal>
                                </goals>
                                <configuration>
                                    <executable>mkdir</executable>
                                    <arguments>
                                        <argument>-p</argument>
                                        <argument>certificates/cert</argument>
                                    </arguments>
                                    <workingDirectory>${project.build.directory}</workingDirectory>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>

                <pluginManagement>
                    <plugins>
                        <plugin>
                            <artifactId>maven-failsafe-plugin</artifactId>
                            <configuration>
                                <systemPropertyVariables>
                                    <it-cassandra.ip>${docker.container.seed.ip}</it-cassandra.ip>
                                    <it-cassandra.jmx.port>7199</it-cassandra.jmx.port>
                                    <it-cassandra.native.port>9042</it-cassandra.native.port>
                                </systemPropertyVariables>
                            </configuration>
                        </plugin>

                        <!-- Docker -->
                        <plugin>
                            <groupId>io.fabric8</groupId>
                            <artifactId>docker-maven-plugin</artifactId>
                            <executions>
                                <execution>
                                    <id>start-it-cassandra</id>
                                    <phase>pre-integration-test</phase>
                                    <goals>
                                        <goal>start</goal>
                                    </goals>
                                    <configuration>
                                        <images>
                                            <image>
                                                <name>ecc-cassandra-test:${it.cassandra.version}</name>
                                                <alias>cassandra1</alias>
                                                <run>
                                                    <memory>${it.cassandra.memory}</memory>
                                                    <memorySwap>-1</memorySwap>
                                                    <env>
                                                        <LOCAL_JMX>no</LOCAL_JMX>
                                                        <JVM_OPTS>-Xmx${it.cassandra.heap} -Xms${it.cassandra.heap} -Xmn100M</JVM_OPTS>
                                                        <JVM_EXTRA_OPTS>-Dcom.sun.management.jmxremote.authenticate=false -Dcassandra.superuser_setup_delay_ms=0</JVM_EXTRA_OPTS>
                                                    </env>
                                                    <exposedPropertyKey>seed</exposedPropertyKey>
                                                    <volumes>
                                                        <bind>
                                                            <volume>${project.build.directory}/certificates/cert:/etc/certificates</volume>
                                                        </bind>
                                                    </volumes>
                                                    <wait>
                                                        <time>60000</time>
                                                        <tcp>
                                                            <ports>
                                                                <port>9042</port>
                                                            </ports>
                                                        </tcp>
                                                    </wait>
                                                </run>
                                            </image>
                                            <image>
                                                <name>ecc-cassandra-test:${it.cassandra.version}</name>
                                                <alias>cassandra2</alias>
                                                <run>
                                                    <memory>${it.cassandra.memory}</memory>
                                                    <memorySwap>-1</memorySwap>
                                                    <env>
                                                        <LOCAL_JMX>no</LOCAL_JMX>
                                                        <HOSTNAME>$HOSTNAME</HOSTNAME>
                                                        <CASSANDRA_SEEDS>$${docker.container.seed.ip}</CASSANDRA_SEEDS>
                                                        <JVM_OPTS>-Xmx${it.cassandra.heap} -Xms${it.cassandra.heap} -Xmn100M</JVM_OPTS>
                                                        <JVM_EXTRA_OPTS>-Dcom.sun.management.jmxremote.authenticate=false -Dcassandra.superuser_setup_delay_ms=0 -Dcassandra.ring_delay_ms=4000 </JVM_EXTRA_OPTS>
                                                    </env>
                                                    <volumes>
                                                        <bind>
                                                            <volume>${project.build.directory}/certificates/cert:/etc/certificates</volume>
                                                        </bind>
                                                    </volumes>
                                                    <wait>
                                                        <time>120000</time>
                                                        <tcp>
                                                            <ports>
                                                                <port>9042</port>
                                                            </ports>
                                                        </tcp>
                                                    </wait>
                                                </run>
                                            </image>
                                            <image>
                                                <name>ecc-cassandra-test:${it.cassandra.version}</name>
                                                <alias>cassandra3</alias>
                                                <run>
                                                    <memory>${it.cassandra.memory}</memory>
                                                    <memorySwap>-1</memorySwap>
                                                    <env>
                                                        <LOCAL_JMX>no</LOCAL_JMX>
                                                        <CASSANDRA_SEEDS>$${docker.container.seed.ip}</CASSANDRA_SEEDS>
                                                        <JVM_OPTS>-Xmx${it.cassandra.heap} -Xms${it.cassandra.heap} -Xmn100M</JVM_OPTS>
                                                        <JVM_EXTRA_OPTS>-Dcom.sun.management.jmxremote.authenticate=false -Dcassandra.superuser_setup_delay_ms=0 -Dcassandra.ring_delay_ms=4000</JVM_EXTRA_OPTS>
                                                    </env>
                                                    <volumes>
                                                        <bind>
                                                            <volume>${project.build.directory}/certificates/cert:/etc/certificates</volume>
                                                        </bind>
                                                    </volumes>
                                                    <wait>
                                                        <time>120000</time>
                                                        <tcp>
                                                            <ports>
                                                                <port>9042</port>
                                                            </ports>
                                                        </tcp>
                                                    </wait>
                                                </run>
                                            </image>
                                            <image>
                                                <name>ecc-cassandra-test:${it.cassandra.version}</name>
                                                <alias>cassandra4</alias>
                                                <run>
                                                    <memory>${it.cassandra.memory}</memory>
                                                    <memorySwap>-1</memorySwap>
                                                    <env>
                                                        <LOCAL_JMX>no</LOCAL_JMX>
                                                        <CASSANDRA_SEEDS>$${docker.container.seed.ip}</CASSANDRA_SEEDS>
                                                        <JVM_OPTS>-Xmx${it.cassandra.heap} -Xms${it.cassandra.heap} -Xmn100M</JVM_OPTS>
                                                        <JVM_EXTRA_OPTS>-Dcom.sun.management.jmxremote.authenticate=false -Dcassandra.superuser_setup_delay_ms=0 -Dcassandra.ring_delay_ms=4000</JVM_EXTRA_OPTS>
                                                    </env>
                                                    <volumes>
                                                        <bind>
                                                            <volume>${project.build.directory}/certificates/cert:/etc/certificates</volume>
                                                        </bind>
                                                    </volumes>
                                                    <wait>
                                                        <time>120000</time>
                                                        <tcp>
                                                            <ports>
                                                                <port>9042</port>
                                                            </ports>
                                                        </tcp>
                                                        <exec>
                                                            <postStart>/etc/cassandra/setup_db.sh</postStart>
                                                        </exec>
                                                    </wait>
                                                </run>
                                            </image>
                                        </images>
                                    </configuration>
                                </execution>
                                <execution>
                                    <id>stop-it-cassandra</id>
                                    <phase>post-integration-test</phase>
                                    <goals>
                                        <goal>stop</goal>
                                    </goals>
                                </execution>
                            </executions>
                        </plugin>
                    </plugins>
                </pluginManagement>
            </build>
        </profile>
    </profiles>

    <reporting>
        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-jxr-plugin</artifactId>
                <version>${org.apache.maven.plugin.maven-jxr-plugin.version}</version>
            </plugin>
        </plugins>
    </reporting>

    <distributionManagement>
        <snapshotRepository>
            <id>ossrh</id>
            <url>https://oss.sonatype.org/content/repositories/snapshots/</url>
        </snapshotRepository>
        <repository>
            <id>ossrh</id>
            <url>https://oss.sonatype.org/service/local/staging/deploy/maven2/</url>
        </repository>
    </distributionManagement>

    <organization>
        <name>Ericsson AB</name>
        <url>http://www.ericsson.com</url>
    </organization>

    <developers>
        <developer>
            <name>Marcus Olsson</name>
            <email>marcus.olsson@ericsson.com</email>
            <organization>Ericsson AB</organization>
            <organizationUrl>http://www.ericsson.com</organizationUrl>
        </developer>
        <developer>
            <name>Per Otterström</name>
            <email>per.otterstrom@ericsson.com</email>
            <organization>Ericsson AB</organization>
            <organizationUrl>http://www.ericsson.com</organizationUrl>
        </developer>
    </developers>

    <scm>
        <url>https://github.com/ericsson/ecchronos</url>
        <connection>scm:git:git@github.com:ericsson/ecchronos.git</connection>
        <developerConnection>scm:git:git@github.com:ericsson/ecchronos.git</developerConnection>
      <tag>HEAD</tag>
  </scm>
</project>
